// <auto-generated />
using System;
using BookAuthorManagementApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookAuthorManagementApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookAuthorManagementApi.Entities.Author", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = "722e680a-cd6d-4e76-9c26-7211d0715389",
                            Address = "Jalan Raya, Pasar Rebo, Jakarta Timur",
                            BirthDate = new DateTime(1990, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Rangga Duta",
                            IsDeleted = false,
                            Phone = "08988838388"
                        },
                        new
                        {
                            Id = "bf238d0a-386b-4728-a570-62f41b654548",
                            Address = "Jalan Palembang, Bekasi",
                            BirthDate = new DateTime(1983, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Arya Samudra",
                            IsDeleted = false,
                            Phone = "08378723"
                        },
                        new
                        {
                            Id = "d7238d0a-386b-4728-a570-62f41b654549",
                            Address = "Jalan Sudirman, Jakarta Selatan",
                            BirthDate = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Budi Santoso",
                            IsDeleted = false,
                            Phone = "081234567890"
                        },
                        new
                        {
                            Id = "e8238d0a-386b-4728-a570-62f41b654550",
                            Address = "Jalan Gatot Subroto, Bandung",
                            BirthDate = new DateTime(1992, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Dewi Putri",
                            IsDeleted = false,
                            Phone = "087654321098"
                        },
                        new
                        {
                            Id = "f9238d0a-386b-4728-a570-62f41b654551",
                            Address = "Jalan Ahmad Yani, Surabaya",
                            BirthDate = new DateTime(1988, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Eko Prasetyo",
                            IsDeleted = false,
                            Phone = "089876543210"
                        });
                });

            modelBuilder.Entity("BookAuthorManagementApi.Entities.Book", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("integer");

                    b.Property<string>("PublisherId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = "4ef010ae-5996-47c3-b367-7a6f93b2c605",
                            AuthorId = "e8238d0a-386b-4728-a570-62f41b654550",
                            Description = "Buku tentang petualangan seorang penjaga langit yang menjadi saksi dari kejadian misterius di langit.",
                            PublicationYear = 2017,
                            PublisherId = "c8e5cb17-7758-4cdf-ac9f-5bf12cb4086f",
                            Title = "Sang Penjaga Langit"
                        },
                        new
                        {
                            Id = "5ef010ae-5996-47c3-b367-7a6f93b2c606",
                            AuthorId = "e8238d0a-386b-4728-a570-62f41b654550",
                            Description = "Sebuah novel petualangan tentang ekspedisi ke pulau misterius yang menyimpan banyak rahasia.",
                            PublicationYear = 2019,
                            PublisherId = "b6e5cb17-7758-4cdf-ac9f-5bf12cb4086e",
                            Title = "Rahasia Pulau Tersembunyi"
                        },
                        new
                        {
                            Id = "6ef010ae-5996-47c3-b367-7a6f93b2c607",
                            AuthorId = "f9238d0a-386b-4728-a570-62f41b654551",
                            Description = "Buku fiksi ilmiah yang mengisahkan kehidupan manusia di tahun 2150.",
                            PublicationYear = 2020,
                            PublisherId = "d9e5cb17-7758-4cdf-ac9f-5bf12cb4086g",
                            Title = "Kisah dari Masa Depan"
                        },
                        new
                        {
                            Id = "7ef010ae-5996-47c3-b367-7a6f93b2c608",
                            AuthorId = "e8238d0a-386b-4728-a570-62f41b654550",
                            Description = "Memoar seorang penulis terkenal yang mengungkap perjalanan hidupnya dalam dunia literasi.",
                            PublicationYear = 2018,
                            PublisherId = "c8e5cb17-7758-4cdf-ac9f-5bf12cb4086f",
                            Title = "Jejak Sang Penulis"
                        },
                        new
                        {
                            Id = "8ef010ae-5996-47c3-b367-7a6f93b2c609",
                            AuthorId = "f9238d0a-386b-4728-a570-62f41b654551",
                            Description = "Buku yang membahas berbagai aspek filosofis dalam kehidupan sehari-hari.",
                            PublicationYear = 2021,
                            PublisherId = "b6e5cb17-7758-4cdf-ac9f-5bf12cb4086e",
                            Title = "Filosofi Kehidupan"
                        },
                        new
                        {
                            Id = "9ef010ae-5996-47c3-b367-7a6f93b2c610",
                            AuthorId = "e8238d0a-386b-4728-a570-62f41b654550",
                            Description = "Novel misteri yang mengungkap rahasia gelap sebuah kota tua yang terlupakan.",
                            PublicationYear = 2022,
                            PublisherId = "d9e5cb17-7758-4cdf-ac9f-5bf12cb4086g",
                            Title = "Misteri Kota Tua"
                        });
                });

            modelBuilder.Entity("BookAuthorManagementApi.Entities.Publisher", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            Id = "b6e5cb17-7758-4cdf-ac9f-5bf12cb4086e",
                            Address = "Jakarta Pusat",
                            IsDeleted = false,
                            Name = "Gramedia",
                            Phone = "021-00309944"
                        },
                        new
                        {
                            Id = "c8e5cb17-7758-4cdf-ac9f-5bf12cb4086f",
                            Address = "Jakarta Selatan",
                            IsDeleted = false,
                            Name = "Erlangga",
                            Phone = "021-77309944"
                        },
                        new
                        {
                            Id = "d9e5cb17-7758-4cdf-ac9f-5bf12cb4086g",
                            Address = "Bandung",
                            IsDeleted = false,
                            Name = "Mizan",
                            Phone = "022-88309944"
                        });
                });

            modelBuilder.Entity("BookAuthorManagementApi.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "fa5d042a-9fe5-4cac-867f-339e1cf7e183",
                            Password = "$2a$11$l3hfzLeFyzDpIu6jn6bJxOgZ5Nb8uJ3bptbotMUiP45xB9JKqqMHi",
                            Role = "Administrator",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "4f2da188-4413-41f9-863a-4ce2f0b53bb4",
                            Password = "$2a$11$zSdBBZ89jkFefsFrZt5RlOCn292ZH0GGMUkaZYg2Z9uYN58simzgO",
                            Role = "Administrator",
                            UserName = "admin2"
                        });
                });

            modelBuilder.Entity("BookAuthorManagementApi.Entities.Book", b =>
                {
                    b.HasOne("BookAuthorManagementApi.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookAuthorManagementApi.Entities.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookAuthorManagementApi.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookAuthorManagementApi.Entities.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
